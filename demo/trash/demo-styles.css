/* 
* @license
* classes-php 
* Copyright (c) 2022 Abraham Ukachi
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* @name: Demo 
* @type: Styles
* @author: Abraham Ukachi <abraham.ukachi@laplateforme.io>
*/


/* ==== DEMO STYLES ==== */





/* ==== FLEX LAYOUT ==== */

/* Flex-Layout */
.flex-layout {
  display: flex;
}


/* Screens & Fixed Layouts */
.screen.flex-layout, .flex-layout[fixed] {
  width: 100vw;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 20;
  background: inherit;
  color: inherit;
}

/* Vertical Flex-Layout */
.vertical.flex-layout {
  flex-direction: column;
}

/* Horizontal Flex-Layout */
.horizontal.flex-layout {
  flex-direction: row;
}

/* Centered Flex-Layout */
.centered.flex-layout {
  justify-content: center;
  align-items: center;
}

/* JustCenter Flex-Layout */
.center.flex-layout {
  align-items: center;
}

/* ==== END of FLEX LAYOUT ==== */



/* Full Bleed */
[fullbleed] {
  margin: 0;
  padding: 0;
}


/* Fit nicely into its container */
[fit] {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
}

/* Hidden */
[hidden] {
  display: none !important;
}

/* Disabled */
[disabled] {
  pointer-events: none !important;
  cursor: default !important;
}

/* Flex SPAN */
span[flex] {
  display: flex;
  flex: 1;
}

/* Naked Buttons */
button[naked] {
  border: 0;
  background: none;
  list-style: none;
}


/* 
 * --> Narrow - Device <--
 * Phone: ? (Responsive)
 * Dimension: ~460px (width)
 *
 * ***************************************
 * when the viewport is lesser than 460px,
 * layout changes to a narrow-layout.
 * ***************************************
 */

/* The Boss - html */
html {
  width: 100%;
  height: 100%;
}

/* Body */
body {
  display: flex;
  flex-direction: column;
  position: relative;
  width: 100%;
  height: 100%;
  background-color: var(--background-color);
  color: var(--on-background-color);
  fill: var(--on-background-color);
   
  /* Support for all Webkit browsers. */
  -webkit-font-smoothing: antialiased;
  -webkit-transition: background-color 200ms ease;

  /* Support for Safari and Chrome. */
  text-rendering: optimizeLegibility;
  transition: background-color 200ms ease;

  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;
  -moz-transition: background-color 200ms ease;
  
  /* Support for IE. */
  font-feature-settings: 'liga';

  overflow: hidden;
}

/* App Layout */
#appLayout {}

/* MAIN part of App Layout */
#appLayout > main {
  position: relative;
  flex: 1;
  width: 100%;
  height: 100%;
}

/* ASIDE part of App Layout */
#appLayout > aside {
  display: none;
  position: relative;
  width: var(--aside-width, 50%);
  height: 100%;
}


/* ------ */


/* all App Bars in App Header */
#appHeader > .app-bar {
  display: flex;
  flex-direction: row;
  align-items: center;
  position: relative;
  width: 100%;
  height: var(--app-bar-size, 54px);
  box-sizing: border-box;
  padding: 0 var(--app-bar-padding, 16px);
  background: var(--app-bar-color-background, inherit);
  color: var(--app-bar-color-on-background, inherit);
}


/* Title Wrappers in App Header */
#appHeader .title-wrapper {
    display: flex;
    flex-direction: column;
    flex: 1;
    padding: 0 8px;
    height: 100%;
    justify-content: center;
    box-sizing: border-box;
    overflow: hidden;
    text-overflow: ellipsis;
}



/* App Logo | SPAN */
span.app-logo {
  display: block;
  position: relative;
  width: var(--app-logo-size, 32px);
  height: var(--app-logo-size, 32px);
  background-color: var(--app-logo-color, var(--on-background-color));
  opacity: var(--app-logo-opacity, inherit);

  -webkit-mask: url('logo.svg') no-repeat 50% 50%;
  -moz-mask: url('logo.svg') no-repeat 50% 50%;
  mask: url('logo.svg') no-repeat 50% 50%;

  -webkit-mask-size: cover;
  -moz-mask-size: cover;
  mask-size: cover;
}


/* ------ */


/* Content */
#content {
  display: block;
  position: relative;
  box-sizing: border-box;
  flex: 1;
  overflow: scroll;
  scroll-behavior: smooth;
}

/* Container of Content */
#content > .container {
  width: 100%;
  height: calc(100vh - var(--app-bar-size, 54px));
  box-sizing: border-box;
  padding: 8px 16px;
}


/* ===<<< Form ..+.. Input Default Styles >>>=== */

/* Form Styles */
form {
  --icon-button-size: 30px;
  --icon-button-padding: 4px;

  width: 100%;
  height: auto;
  padding: 8px 16px;
  box-sizing: border-box;
  max-width: var(--form-max-width, 450px);
  margin: 24px auto;
}


/* All the children of form */
form > * {
  opacity: 0;
  -webkit-animation: fadeIn 0.5s ease var(--form-animation-delay, 0.2s) forwards, slideFromDown 0.5s ease var(--form-animation-delay, 0.2s);
  -moz-animation: fadeIn 0.5s ease var(--form-animation-delay, 0.2s) forwards, slideFromDown 0.5s ease var(--form-animation-delay, 0.2s);
  animation: fadeIn 0.5s ease var(--form-animation-delay, 0.2s) forwards, slideFromDown 0.5s ease var(--form-animation-delay, 0.2s);
}


/* Let's gradually assign an animation delay to up to 10 children of `<form>` */
/* TODO: Find a better way to do this :) */

/* First child of form */
form > *:nth-child(1) {
  --form-animation-delay: 0.2s;
}

/* Second child of form */
form > *:nth-child(2) {
  --form-animation-delay: 0.3s; /* 0.2 + 0.1 */
}


/* Third child of form */
form > *:nth-child(3) {
  --form-animation-delay: 0.4s; /* 0.3 + */
}

/* Fourth child of form */
form > *:nth-child(4) {
  --form-animation-delay: 0.5s;
}


/* Fifth child of form */
form > *:nth-child(5) {
  --form-animation-delay: 0.6s;
}


/* First child of form */
form > *:nth-child(6) {
  --form-animation-delay: 0.7s;
}

/* Second child of form */
form > *:nth-child(7) {
  --form-animation-delay: 0.8s;
}


/* Third child of form */
form > *:nth-child(8) {
  --form-animation-delay: 0.9s;
}

/* Fourth child of form */
form > *:nth-child(9) {
  --form-animation-delay: 1s;
}


/* Fifth child of form */
form > *:nth-child(10) {
  --form-animation-delay: 1.1s;
}

/* all labels next to an input */
label {
  pointer-events: none;
  user-select: none;
  position: absolute;
  left: 0;
  top: 0;

  -webkit-transform: translateY(0px);
  -moz-transform: translateY(0px);
  transform: translateY(0px);

  -webkit-transition: all .2s ease;
  -moz-transition: all .2s ease;
  transition: all .2s ease;
}


/* Labels with [raised] attribute / property */
label[raised] {
  transform: translateY(-18px);
  font-size: 12px;
  line-height: 20px;
  letter-spacing: 1.2px;
}

/* Input Wrapper */
.input-wrapper {
  position: relative;
  margin: 12px 0 24px;
  overflow: visible;

  -webkit-transition: margin .2s ease;
  -moz-transition: margin .2s ease;
  transition: margin .2s ease;
}

/* If the Input Wrapper has an error */
.input-wrapper[has-error] {
  margin-bottom: var(--input-wrapper-error-margin, 48px);
}

/* Input Styles */
input {
  background: inherit;
  color: inherit;
  border: 0;
  outline: 0;
  flex: 1;
  margin-bottom: 8px;
}

/* Password Input */
input[type="password"] {}

/* Submit Button / Inputs & Outlined Buttons */
input[type="submit"], button[outlined], a[role="button"][outlined] {
  border: 2px solid var(--outline-color);
  border-radius: 8px;
  padding: 8px 16px;
  opacity: var(--opacity-text-inactive);
  cursor: pointer;
  margin-top: 24px;
  margin-bottom: 16px;
  background: inherit;
  color: inherit;

  -webkit-transition: all .2s ease;
  -moz-transition: all .2s ease;
  transition: all .2s ease;
}

/* Hovered / Focused Submit Input & Outlined Buttons */
input[type="submit"]:hover, input[type="submit"]:focus,
button[outlined]:hover, a[role="button"][outlined]:focus {
  opacity: 1;
  border-color: var(--primary-color);
  color: var(--primary-color);
}

/* [contained] submit input  */
input[type="submit"][contained] {
  background: var(--primary-color);
  color: var(--on-primary-color);
  border: 0;
}

/* Contained Button */
button[contained], a[role="button"][contained] {
  background: var(--button-background-color, var(--primary-container-color));
  color: var(--button-text-color, var(--on-primary-container-color));
  padding: var(--button-padding, 6px 12px);
  border-radius: 8px;
  font-size: 18px; /* b4: 16px */
  line-height: 32px;
  width: var(--button-width, 100%);
  height: var(--button-height, inherit);
  border: 0;
  outline: none;
  font-weight: bold;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  cursor: pointer;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
  
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  transform: scale(1);

  -webkit-transition: all 200ms ease;
  -moz-transition: all 200ms ease;
  transition: all 200ms ease;
}

/* Whenever a button that expands is hovered and/or gains focus */
button[contained][expands]:hover, a[role="button"][contained][expands]:hover,
button[contained][expands]:focus-visible, a[role="button"][contained][expands]:focus-visible {
  -webkit-transform: scale(1.1);
  -moz-transform: scale(1.1);
  transform: scale(1.1);
}

/* Whenever a button that shrinks is pressed */
button[contained][shrinks]:active, a[role="button"][contained][shrinks]:active {
  -webkit-transform: scale(0.95);
  -moz-transform: scale(0.95);
  transform: scale(0.95);
}



/* Contained Button on hover */
button[contained]:hover, a[role="button"][contained]:hover {
  text-decoration: none;
  background: var(--button-background-color-hover, var(--primary-color));
  color: var(--button-text-color-hover, var(--on-primary-color));
}

/* Whenever a contained button gains focus */
button[contained]:focus-visible, a[role="button"][contained]:focus-visible {
  outline: none;
  background: var(--button-color-focus, var(--tertiary-color));
  color: var(--button-color-focus, var(--on-tertiary-color));
}

/* Iput Indicator */
.input-indicator {
  height: 2px;
  width: 100%;
  position: absolute;
  left: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  pointer-events: none;
  /* margin: 8px 0; */
}

/* Error style of Input Indicator */
.input-indicator.error {
  --input-indicator-color: var(--error-color);
}

/* Bar of Input Indicator*/
.input-indicator span[bar] {
  width: inherit;
  height: inherit;
  background: var(--outline-color);
  display: block;
  opacity: var(--opacity-md-icon-inactive);
}

/* Value of Input Indicator */
.input-indicator span[val] {
  position: absolute;
  top: 0;
  margin: 0 auto;
  height: inherit;
  width: 0%;
  background: var(--input-indicator-color, var(--primary-color));
  opacity: 0;

  -webkit-transition: width .2s ease, opacity .3s ease ;
  -moz-transition: width .2s ease, opacity .3s ease;
  transition: width .2s ease, opacity .3s ease;
}


/* Set the width of the indicator value (i.e. span[val]) to 100%:
 * 1. whenever an input inside a form gains focus
 * 2. if the input indicator has a `no-effect` attribute
 * */
input:focus ~ .input-indicator > span[val], .input-indicator[no-effect] span[val]  {
  width: 100%;
  opacity: 1;
}


/* Input Message */
p.input-message {
  margin: 8px 4px;
  width: 100%;
  height: 35px;
  display: block;
  position: absolute;
  font-size: 12px;
  bottom: 0;
  box-sizing: border-box;
  left: 0;
  color: var(--error-color);
  transform: translateY(150%);
  line-height: 16px;
  pointer-events: none;
}

/* ===>>> End of Form ..+.. Input Default Styles  <<<=== */


/* Default Links - A */
a {
  color: var(--link-color, var(--primary-color));
  text-decoration: none;
  cursor: pointer;
}

/* Hover over default links - A */
a:hover {
  text-decoration: underline;
}



/* 
 * --> Wide - Layout <--
 * Phone: ? (Responsive)
 * Dimension: 460px+ (width)
 *
 * ***************************************
 * when the viewport is bigger than 460px,
 * layout changes to wide-layout.
 * ***************************************
 */
@media (min-width: 460px) {
  
  /* ASIDE part of App Layout */
  #appLayout > aside {
    display: flex;
  }
 

}



/* 
 * --> Tablet - Device <--
 * Phone: ? (Responsive)
 * Width: 768px <-to-> 1024px
 */
@media (min-width: 768px) and (max-width: 1024px) {}


/* 
 * --> Laptop - Device <--
 * Phone: ? (Responsive)
 * Width: 1024px <-to-> 2560px
 */
@media (min-width: 1024px) and (max-width: 2560px) {

  /* ASIDE part of App Layout */
  #appLayout > aside {
    width: 60%;
  } 

}


/* ==== END of THEME STYLES ==== */
